name: Persistent Login (Contas 1-10)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *" # Executa a cada 6 horas

concurrency:
  group: persistent-login-1-10
  cancel-in-progress: false # Evita execução simultânea; nova espera a anterior terminar

jobs:
  persistent-login-1-10:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configura Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instala dependências
        run: |
          pip install selenium webdriver-manager colorama

      - name: Executa login persistente (Contas 1-10)
        env:
          HABBLIVE_USERNAME_1: ${{ secrets.HABBLIVE_USERNAME_1 }}
          HABBLIVE_PASSWORD_1: ${{ secrets.HABBLIVE_PASSWORD_1 }}
          HABBLIVE_USERNAME_2: ${{ secrets.HABBLIVE_USERNAME_2 }}
          HABBLIVE_PASSWORD_2: ${{ secrets.HABBLIVE_PASSWORD_2 }}
          HABBLIVE_USERNAME_3: ${{ secrets.HABBLIVE_USERNAME_3 }}
          HABBLIVE_PASSWORD_3: ${{ secrets.HABBLIVE_PASSWORD_3 }}
          HABBLIVE_USERNAME_4: ${{ secrets.HABBLIVE_USERNAME_4 }}
          HABBLIVE_PASSWORD_4: ${{ secrets.HABBLIVE_PASSWORD_4 }}
          HABBLIVE_USERNAME_5: ${{ secrets.HABBLIVE_USERNAME_5 }}
          HABBLIVE_PASSWORD_5: ${{ secrets.HABBLIVE_PASSWORD_5 }}
          HABBLIVE_USERNAME_6: ${{ secrets.HABBLIVE_USERNAME_6 }}
          HABBLIVE_PASSWORD_6: ${{ secrets.HABBLIVE_PASSWORD_6 }}
          HABBLIVE_USERNAME_7: ${{ secrets.HABBLIVE_USERNAME_7 }}
          HABBLIVE_PASSWORD_7: ${{ secrets.HABBLIVE_PASSWORD_7 }}
          HABBLIVE_USERNAME_8: ${{ secrets.HABBLIVE_USERNAME_8 }}
          HABBLIVE_PASSWORD_8: ${{ secrets.HABBLIVE_PASSWORD_8 }}
          HABBLIVE_USERNAME_9: ${{ secrets.HABBLIVE_USERNAME_9 }}
          HABBLIVE_PASSWORD_9: ${{ secrets.HABBLIVE_PASSWORD_9 }}
          HABBLIVE_USERNAME_10: ${{ secrets.HABBLIVE_USERNAME_10 }}
          HABBLIVE_PASSWORD_10: ${{ secrets.HABBLIVE_PASSWORD_10 }}
        run: python persistent_login.py

      - name: Auto-disparo para reinício imediato
        if: ${{ vars.HABILITAR_REINICIO == 'true' }}
        run: |
          echo "Reiniciando workflow imediatamente..."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/persistent-login-1-10.yml/dispatches \
            -d '{"ref":"${{ github.ref_name }}"}'
